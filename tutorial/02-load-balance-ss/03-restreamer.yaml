apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: restreamer
spec:
  serviceName: restreamer
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      app: restreamer
  template:
    metadata:
      labels:
        app: restreamer
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - restreamer
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: in-api-call-sa
      containers:
      - name: flussonic
        image: flussonic/flussonic:v22.09-49
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        - containerPort: 1935
          name: rtmp
        env:
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: flussonic-license
              key: license_key
              optional: false
        - name: FLUSSONIC_SECRETS_STORAGE
          value: "k8s://test-secret"
        - name: FLUSSONIC_HTTP
          value: "80"
        - name: FLUSSONIC_EDIT_AUTH
          valueFrom:
            secretKeyRef:
              name: test-secret
              key: edit_auth
              optional: false
        volumeMounts:
        - name: config-templates
          mountPath: /etc/flussonic/flussonic.conf.d
        livenessProbe:
          httpGet:
            path: /flussonic/api/v3/monitoring/liveness
            port: 80
            httpHeaders:
            - name: Authorization
              value: Bearer cm9vdDpwYXNzd29yZA==
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /flussonic/api/v3/monitoring/readiness
            port: 80
            httpHeaders:
            - name: Authorization
              value: Bearer cm9vdDpwYXNzd29yZA==
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /flussonic/api/v3/monitoring/readiness
            port: 80
            httpHeaders:
            - name: Authorization
              value: Bearer cm9vdDpwYXNzd29yZA==
          initialDelaySeconds: 3
          periodSeconds: 3

      volumes:
      - name: config-templates
        configMap:
          name: streamer-presets
          items:
          - key: restream
            path: restream.conf
          - key: cluster_key
            path: cluster_key.conf
---
apiVersion: v1
kind: Service
metadata:
  name: egress
  annotations:

    # https://docs.digitalocean.com/products/kubernetes/how-to/configure-load-balancers/
    service.beta.kubernetes.io/do-loadbalancer-name: "egress-publish-lb-02"
    service.beta.kubernetes.io/do-loadbalancer-enable-backend-keepalive: "true"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-path: "/flussonic/api/whoami"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-type: "cookies"
    service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-cookie-name: "player"
    service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-cookie-ttl: "60"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app: restreamer
  ports:
  - port: 80
    name: http
    targetPort: http
